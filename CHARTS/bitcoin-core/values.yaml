###################################################################################
##################################### REPLICAS ####################################
###################################################################################
replicaCount: 1

###################################################################################
####################################### IMAGE #####################################
###################################################################################
image:
  name: "ruimarinho/bitcoin-core"
  tag: latest
  #pullPolicy: IfNotPresent # Always


###################################################################################
##################################### SERVICE #####################################
###################################################################################
service:
  #nameOverride: "dummy-service"
  type: "ClusterIP" 
  clusterIp: "None" # set to "None" for headless service configuration
  ports: 
    - port: 8332
      targetPort: 8332
      protocol: TCP
      name: rpc-mainnet
    - port: 8333
      targetPort: 8333
      protocol: TCP
      name: p2p-mainnet
    - port: 28332          
      targetPort: 28332 
      protocol: TCP      
      name: zmq-rawblock
    - port: 28333          
      targetPort: 28333 
      protocol: TCP      
      name: zmq-rawtax   
    - port: 28334    
      targetPort: 28334 
      protocol: TCP      
      name: zmq-hashblock   
    - port: 28335          
      targetPort: 28335 
      protocol: TCP      
      name: zmq-hashtx

###################################################################################
################################## container ports ################################
###################################################################################
# these are the ports opened in the container
containerPorts:
  - containerPort: 8332
    protocol: TCP
    name: rpc-mainnet
  - containerPort: 8333
    protocol: TCP
    name: p2p-mainnet
  - containerPort: 28332
    protocol: TCP
    name: zmq-rawblock
  - containerPort: 28333
    protocol: TCP
    name: zmq-rawtax
  - containerPort: 28334
    protocol: TCP
    name: zmq-hashblock
  - containerPort: 28335
    protocol: TCP
    name: zmq-hashtx

###################################################################################
################################## NODE SELECTOR ##################################
###################################################################################
# select a stable worker node of the kubernetes cluster to avoid syncing issues 
nodeSelectorEnabled: false
nodeSelector:
  # preemptible: "false"

###################################################################################
################################# SECURITY CONTEXT ################################
###################################################################################
# stablish what user and what privileges are used to run the bitcoin process
securityContext:
  enabled: false
  runAsUser: 100
  allowPrivilegeEscalation: false

###################################################################################
###################################### COMMAND ####################################
###################################################################################
# here you define the options for the node similarly to what you would do in the 
# command line or the bitcoin.conf file; 
# -regtest=1 is the default
command: 
  enabled: true
  args: [
    "-regtest=1",
    "-txindex=1",
    "-blockfilterindex=1",
    "-server=1",
    "-rpcbind=0.0.0.0",
    "-rpcallowip=172.0.0.0/8",
    "-rpcallowip=192.0.0.0/8",
    "-rpcallowip=127.0.0.1",
    "-rpcallowip=10.0.0.0/8",
    "-rpcport=8332",
    "-zmqpubrawblock=tcp://0.0.0.0:28332",
    "-zmqpubrawtx=tcp://0.0.0.0:28333",
    "-zmqpubhashblock=tcp://0.0.0.0:28334",
    "-zmqpubhashtx=tcp://0.0.0.0:28335"
  ]

###################################################################################
##################################### RESOURCES ###################################
###################################################################################
# when using a cloud provided disk with limited input/output capacity, errors and 
# syncing problems may occur. in that situation, one can tweak the CPU and memory
# to limit the I/O load capacity of the node. once fully synced it is ok to crank
# these resources up to serve more requests per second. 
# these defaults are a good starting point for a cloud provided standard disk
# Running the numbers usually takes 5 min with these values 
resources:
  requests:
    memory: "1Gi"
    cpu: "0.1"
  limits:
    memory: "2Gi"
    cpu: "0.6"

###################################################################################
##################################### PROBES ######################################
###################################################################################
# use a generous grace period to avoid long resyncs (rolling forward) at restart
# when the node receives SIGINT directive from kubernetes, it initiates a propper 
# shutdown process that takes time... 300 seconds seems to be enough time. 
terminationGracePeriodSeconds: 300
probesEnabled: false
livenessProbe:
  exec:
    command:
      - bitcoin-cli
      - getblockcount
  # use generous initial delay. if the node was NOT propperly shutdown before, 
  # the resync (rolling forward) will last for several hours before it is complete...
  # during this time, all CLI commands will fail and kubernetes will kill the pod 
  # and cause it to crashloop. 300 seconds seems to be enough in normal conditions
  initialDelaySeconds: 300 
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

readinessProbe:
  exec:
    command:
      - bitcoin-cli
      - getblockcount
  # use generous initial delay. if the node was NOT propperly shutdown before, 
  # the resync (rolling forward) will last for several hours before it is complete...
  # during this time, all CLI commands will fail and kubernetes will kill the pod 
  # and cause it to crashloop. 300 seconds seems to be enough in normal conditions
  initialDelaySeconds: 300
  periodSeconds: 60
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1


###################################################################################
################################ DATA PERSISTENCY #################################
###################################################################################
dataPersistency:
  enabled: false # data persistency is disabled by default 
  storageClass: bitcoin-core-data
  volumeMode: "Filesystem"
  mountPath: /home/bitcoin/.bitcoin
  capacity: "450Gi"
  accessModes: 
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  
  # a block containing the provider configuration for the persistent disks
  #providerPvConfig: {}


 